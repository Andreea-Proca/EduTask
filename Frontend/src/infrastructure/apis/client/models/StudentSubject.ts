/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Student } from './Student';
import {
    StudentFromJSON,
    StudentFromJSONTyped,
    StudentToJSON,
} from './Student';
import type { Subject } from './Subject';
import {
    SubjectFromJSON,
    SubjectFromJSONTyped,
    SubjectToJSON,
} from './Subject';

/**
 * 
 * @export
 * @interface StudentSubject
 */
export interface StudentSubject {
    /**
     * 
     * @type {string}
     * @memberof StudentSubject
     */
    studentId?: string;
    /**
     * 
     * @type {Student}
     * @memberof StudentSubject
     */
    student?: Student;
    /**
     * 
     * @type {string}
     * @memberof StudentSubject
     */
    subjectId?: string;
    /**
     * 
     * @type {Subject}
     * @memberof StudentSubject
     */
    subject?: Subject;
}

/**
 * Check if a given object implements the StudentSubject interface.
 */
export function instanceOfStudentSubject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StudentSubjectFromJSON(json: any): StudentSubject {
    return StudentSubjectFromJSONTyped(json, false);
}

export function StudentSubjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudentSubject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'studentId': !exists(json, 'studentId') ? undefined : json['studentId'],
        'student': !exists(json, 'student') ? undefined : StudentFromJSON(json['student']),
        'subjectId': !exists(json, 'subjectId') ? undefined : json['subjectId'],
        'subject': !exists(json, 'subject') ? undefined : SubjectFromJSON(json['subject']),
    };
}

export function StudentSubjectToJSON(value?: StudentSubject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'studentId': value.studentId,
        'student': StudentToJSON(value.student),
        'subjectId': value.subjectId,
        'subject': SubjectToJSON(value.subject),
    };
}

