/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AssignmentDTO } from './AssignmentDTO';
import {
    AssignmentDTOFromJSON,
    AssignmentDTOFromJSONTyped,
    AssignmentDTOToJSON,
} from './AssignmentDTO';
import type { ErrorMessage } from './ErrorMessage';
import {
    ErrorMessageFromJSON,
    ErrorMessageFromJSONTyped,
    ErrorMessageToJSON,
} from './ErrorMessage';

/**
 * 
 * @export
 * @interface AssignmentDTOListServiceResponse
 */
export interface AssignmentDTOListServiceResponse {
    /**
     * 
     * @type {ErrorMessage}
     * @memberof AssignmentDTOListServiceResponse
     */
    error?: ErrorMessage;
    /**
     * 
     * @type {boolean}
     * @memberof AssignmentDTOListServiceResponse
     */
    readonly isOk?: boolean;
    /**
     * 
     * @type {Array<AssignmentDTO>}
     * @memberof AssignmentDTOListServiceResponse
     */
    result?: Array<AssignmentDTO> | null;
}

/**
 * Check if a given object implements the AssignmentDTOListServiceResponse interface.
 */
export function instanceOfAssignmentDTOListServiceResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssignmentDTOListServiceResponseFromJSON(json: any): AssignmentDTOListServiceResponse {
    return AssignmentDTOListServiceResponseFromJSONTyped(json, false);
}

export function AssignmentDTOListServiceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssignmentDTOListServiceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': !exists(json, 'error') ? undefined : ErrorMessageFromJSON(json['error']),
        'isOk': !exists(json, 'isOk') ? undefined : json['isOk'],
        'result': !exists(json, 'result') ? undefined : (json['result'] === null ? null : (json['result'] as Array<any>).map(AssignmentDTOFromJSON)),
    };
}

export function AssignmentDTOListServiceResponseToJSON(value?: AssignmentDTOListServiceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': ErrorMessageToJSON(value.error),
        'result': value.result === undefined ? undefined : (value.result === null ? null : (value.result as Array<any>).map(AssignmentDTOToJSON)),
    };
}

