/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SubjectDTO } from './SubjectDTO';
import {
    SubjectDTOFromJSON,
    SubjectDTOFromJSONTyped,
    SubjectDTOToJSON,
} from './SubjectDTO';

/**
 * 
 * @export
 * @interface AssignmentDTO
 */
export interface AssignmentDTO {
    /**
     * 
     * @type {string}
     * @memberof AssignmentDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AssignmentDTO
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AssignmentDTO
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AssignmentDTO
     */
    dueDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof AssignmentDTO
     */
    subjectId?: string;
    /**
     * 
     * @type {SubjectDTO}
     * @memberof AssignmentDTO
     */
    subject?: SubjectDTO;
}

/**
 * Check if a given object implements the AssignmentDTO interface.
 */
export function instanceOfAssignmentDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AssignmentDTOFromJSON(json: any): AssignmentDTO {
    return AssignmentDTOFromJSONTyped(json, false);
}

export function AssignmentDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssignmentDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dueDate': !exists(json, 'dueDate') ? undefined : (new Date(json['dueDate'])),
        'subjectId': !exists(json, 'subjectId') ? undefined : json['subjectId'],
        'subject': !exists(json, 'subject') ? undefined : SubjectDTOFromJSON(json['subject']),
    };
}

export function AssignmentDTOToJSON(value?: AssignmentDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'dueDate': value.dueDate === undefined ? undefined : (value.dueDate.toISOString()),
        'subjectId': value.subjectId,
        'subject': SubjectDTOToJSON(value.subject),
    };
}

